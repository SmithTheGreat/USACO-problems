
import java.io.*;
import java.util.*;

public class Problem2 {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new FileReader("circlecross.in"));
		PrintWriter pw = new PrintWriter("circlecross.out"); 


		String cowPath =br.readLine();
		int[] points = new int[52];
		int numPairs = 0;
		
		for(int i = 0; i < 52; i++) {
			points[i] = cowPath.charAt(i)-'A';
		}
		for(int i =0; i < 26; i++) {
			int first = getFirstAppearance(points, i);
			int last = getLastAppearance(points, i);
			numPairs += getNumberOfSingles(points, i, first, last);
		}
		pw.println(numPairs);
		
		pw.close();
	}
	public static int getFirstAppearance(int[] points, int desiredValue) {
		for(int i = 0; i < points.length; i++) {
			if(points[i] == desiredValue) {
				return i;
			}
		}
		return -1;
	}
	public static int getLastAppearance(int[] points, int desiredValue) {
		for(int i = points.length-1; i >= 0; i--) {
			if(points[i] == desiredValue) {
				return i;
			}
		}
		return -1;
	}
	public static int getNumberOfSingles(int[] points, int greaterThan, int leftIndex, int rightIndex) {
		int numSingles = 0;
		int[] appearances = new int[26];
		for(int i = leftIndex+1; i < rightIndex; i++) {
			appearances[points[i]]++;
		}
		for(int i = greaterThan + 1; i < appearances.length; i++) {
			if(appearances[i] == 1) {
				numSingles++;
			}
		}
		return numSingles;
	}
}
